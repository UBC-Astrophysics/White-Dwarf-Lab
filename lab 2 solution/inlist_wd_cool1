
! inlist_wd_cool1


&star_job
      show_log_description_at_start = .false.

      mesa_dir = '/home/vmesa/mesa10398'

      save_model_number = 300  ! 30 for others or 300 for 117SMWD.mod
      save_model_filename = 'hires_surface.mod'

      load_saved_model = .true.
!      saved_model_name = '52SMWD.mod'   ! works
!      saved_model_name = '60SMWD.mod'    ! works
!      saved_model_name = '89SMWD.mod'    ! works
      saved_model_name = '117SMWD.mod'  ! does not work -- explodes eventually needs higher model number and simple photosphere
!      saved_model_name = '132SMWD.mod'  ! does not work -- explodes eventually needs higher model number and simple photosphere

      pgstar_flag = .true.

      set_initial_age = .true.
      initial_age = 0

      set_initial_model_number = .true.
      initial_model_number = 0

/ ! end of star_job namelist



&controls

    use_other_neu = .true.
	x_ctrl(1) = 10

   use_gold_tolerances = .true.

      ! check for retries and backups as part of test_suite
      ! you can/should delete this for use outside of test_suite
         max_number_backups = 30 ! 10
         max_number_retries = 80
      max_model_number = 300  ! 30 for others

      use_Type2_opacities = .true.
      
      Zbase = 0.02d0

      min_dq = 1d-21
      max_surface_cell_dq = 1d-21

      correction_xa_limit = 5d-3
      
      gamma_center_limit = 1d99
      logQ_limit = 5.1
      
      max_age = 15e9
      

      photo_interval = 50
      profile_interval = 50
      history_interval = 100
      terminal_interval = 10
      write_header_frequency = 10
      
      min_timestep_limit = 1d-12
      
      accrete_same_as_surface = .false. 
      accretion_h1 = 0.749D+00
      accretion_h2 = 0
      accretion_he3 = 0.292910D-04
      accretion_he4 = 0.237D+00
      accretion_zfracs = 4 ! Lodders 03

      xa_function_species(1) = 'h1'  ! name of nuclide as defined in chem_def
		xa_function_weight(1) = 20
		xa_function_param(1) = 1d-6
      xa_function_species(2) = 'he4'  ! name of nuclide as defined in chem_def
		xa_function_weight(2) = 20
		xa_function_param(2) = 1d-2

      delta_lgL_H_limit = 0.05 ! limit for magnitude of change in lgL_H
      delta_lgL_H_hard_limit = 0.5
      lgL_H_burn_min = 1.5 ! ignore changes in lgL_H if value is less than this

      delta_lgL_He_limit = 0.025 ! limit for magnitude of change in lgL_He
      delta_lgL_He_hard_limit = 1
      lgL_He_burn_min = 2.5 ! ignore changes in lgL_He if value is less than this
   
      delta_lgL_limit = 0.05
      delta_lgL_hard_limit = 0.15

      delta_lgT_limit = 0.5
      delta_lgT_hard_limit = 1
      
      delta_lgRho_limit = 1
      delta_lgRho_hard_limit = -1

      delta_lgTeff_limit = 0.1  
      delta_lgTeff_hard_limit = 0.3

      relax_hard_limits_after_retry = .false.


      mesh_delta_coeff = 2  !1.2
      
      net_logTcut_lo = 0
      net_logTcut_lim = 0
      
!      which_atm_option = 'grey_and_kap'
     which_atm_option = 'simple_photosphere'  ! for 123SM


! FOR DEBUGGING

      !report_hydro_solver_progress = .true. ! set true to see info about newton iterations
      !report_ierr = .true. ! if true, produce terminal output when have some internal error
      !hydro_show_correction_info = .true.
      
      !max_years_for_timestep = 3.67628942044319d-05

      !report_why_dt_limits = .true.
      !report_all_dt_limits = .true.
      !report_hydro_dt_info = .true.
      
      !show_mesh_changes = .true.
      !mesh_dump_call_number = 5189
      !okay_to_remesh = .false.
      
      !trace_evolve = .true.
            

      ! hydro debugging
      !hydro_check_everything = .true.
      !hydro_inspectB_flag = .true.
      !hydro_sizequ_flag = .true.
      
      !hydro_get_a_numerical_partial = -1
      !hydro_test_partials_k = 1
      
      !hydro_numerical_jacobian = .true.
      !hydro_save_numjac_plot_data = .true.
      !hydro_dump_call_number = 195
      !hydro_dump_iter_number = 5
      !hydro_epsder_struct = 1d-6
      !hydro_epsder_chem = 1d-6

      !trace_newton_bcyclic_solve_input = .true. ! input is "B" j k iter B(j,k)
      !trace_newton_bcyclic_solve_output = .true. ! output is "X" j k iter X(j,k)

      !trace_newton_bcyclic_matrix_input = .true.
      !trace_newton_bcyclic_matrix_output = .true.
      
      !trace_newton_bcyclic_steplo = 1 ! 1st model number to trace
      !trace_newton_bcyclic_stephi = 1 ! last model number to trace
      
      !trace_newton_bcyclic_iterlo = 2 ! 1st newton iter to trace
      !trace_newton_bcyclic_iterhi = 2 ! last newton iter to trace
      
      !trace_newton_bcyclic_nzlo = 1 ! 1st cell to trace
      !trace_newton_bcyclic_nzhi = 10000 ! last cell to trace; if < 0, then use nz as nzhi
      
      !trace_newton_bcyclic_jlo = 1 ! 1st var to trace
      !trace_newton_bcyclic_jhi = 100 ! last var to trace; if < 0, then use nvar as jhi
      
      !trace_k = 0

      !fill_arrays_with_NaNs = .true.
      !stop_for_NaNs = .true.

/ ! end of controls namelist



&pgstar
         
      ! top level controls

         !pause = .true. 
            ! if true, the code waits for user to enter a RETURN on the command line
      


/ ! end of pgstar namelist
